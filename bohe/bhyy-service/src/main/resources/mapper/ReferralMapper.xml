<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hengsu.bhyy.core.repository.ReferralRepository">
  <resultMap id="BaseResultMap" type="com.hengsu.bhyy.core.entity.Referral">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="doctor_id" jdbcType="BIGINT" property="doctorId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="operation_time" jdbcType="TIMESTAMP" property="operationTime" />
    <result column="is_send" jdbcType="INTEGER" property="isSend" />
    <result column="appoint_id" jdbcType="BIGINT" property="appointId" />
    <result column="bill_id" jdbcType="BIGINT" property="billId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, customer_id, doctor_id, status, type, num, operation_time, is_send, appoint_id, 
    bill_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from referral
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from referral
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hengsu.bhyy.core.entity.Referral">
    insert into referral (id, customer_id, doctor_id, 
      status, type, num, 
      operation_time, is_send, appoint_id, 
      bill_id)
    values (#{id,jdbcType=BIGINT}, #{customerId,jdbcType=BIGINT}, #{doctorId,jdbcType=BIGINT}, 
      #{status,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{num,jdbcType=INTEGER}, 
      #{operationTime,jdbcType=TIMESTAMP}, #{isSend,jdbcType=INTEGER}, #{appointId,jdbcType=BIGINT}, 
      #{billId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.hengsu.bhyy.core.entity.Referral" keyProperty="id" useGeneratedKeys="true">
    insert into referral
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="doctorId != null">
        doctor_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="operationTime != null">
        operation_time,
      </if>
      <if test="isSend != null">
        is_send,
      </if>
      <if test="appointId != null">
        appoint_id,
      </if>
      <if test="billId != null">
        bill_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="doctorId != null">
        #{doctorId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="operationTime != null">
        #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isSend != null">
        #{isSend,jdbcType=INTEGER},
      </if>
      <if test="appointId != null">
        #{appointId,jdbcType=BIGINT},
      </if>
      <if test="billId != null">
        #{billId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hengsu.bhyy.core.entity.Referral">
    update referral
    <set>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="doctorId != null">
        doctor_id = #{doctorId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="operationTime != null">
        operation_time = #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isSend != null">
        is_send = #{isSend,jdbcType=INTEGER},
      </if>
      <if test="appointId != null">
        appoint_id = #{appointId,jdbcType=BIGINT},
      </if>
      <if test="billId != null">
        bill_id = #{billId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hengsu.bhyy.core.entity.Referral">
    update referral
    set customer_id = #{customerId,jdbcType=BIGINT},
      doctor_id = #{doctorId,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      operation_time = #{operationTime,jdbcType=TIMESTAMP},
      is_send = #{isSend,jdbcType=INTEGER},
      appoint_id = #{appointId,jdbcType=BIGINT},
      bill_id = #{billId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectCount" parameterType="com.hengsu.bhyy.core.entity.Referral" resultType="java.lang.Integer">
    select count(*) from referral
    <where>
      <if test="id != null">
        and id = #{id,jdbcType=BIGINT}
      </if>
      <if test="customerId != null">
        and customer_id = #{customerId,jdbcType=BIGINT}
      </if>
      <if test="doctorId != null">
        and doctor_id = #{doctorId,jdbcType=BIGINT}
      </if>
      <if test="status != null">
        and status = #{status,jdbcType=INTEGER}
      </if>
      <if test="type != null">
        and type = #{type,jdbcType=INTEGER}
      </if>
      <if test="num != null">
        and num = #{num,jdbcType=INTEGER}
      </if>
      <if test="operationTime != null">
        and operation_time = #{operationTime,jdbcType=TIMESTAMP}
      </if>
      <if test="isSend != null">
        and is_send = #{isSend,jdbcType=INTEGER}
      </if>
      <if test="appointId != null">
        and appoint_id = #{appointId,jdbcType=BIGINT}
      </if>
      <if test="billId != null">
        and bill_id = #{billId,jdbcType=BIGINT}
      </if>
    </where>
  </select>
  <select id="selectPage" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from referral where 1 = 1 
    <if test="param1.id != null">
      and id = #{param1.id,jdbcType=BIGINT}
    </if>
    <if test="param1.customerId != null">
      and customer_id = #{param1.customerId,jdbcType=BIGINT}
    </if>
    <if test="param1.doctorId != null">
      and doctor_id = #{param1.doctorId,jdbcType=BIGINT}
    </if>
    <if test="param1.status != null">
      and status = #{param1.status,jdbcType=INTEGER}
    </if>
    <if test="param1.type != null">
      and type = #{param1.type,jdbcType=INTEGER}
    </if>
    <if test="param1.num != null">
      and num = #{param1.num,jdbcType=INTEGER}
    </if>
    <if test="param1.operationTime != null">
      and operation_time = #{param1.operationTime,jdbcType=TIMESTAMP}
    </if>
    <if test="param1.isSend != null">
      and is_send = #{param1.isSend,jdbcType=INTEGER}
    </if>
    <if test="param1.appointId != null">
      and appoint_id = #{param1.appointId,jdbcType=BIGINT}
    </if>
    <if test="param1.billId != null">
      and bill_id = #{param1.billId,jdbcType=BIGINT}
    </if>
    <if test="param2.sort != null">
      order by 
      <foreach collection="param2.sort" item="order" separator=",">
        ${order.property} ${order.direction}
      </foreach>
    </if>
    <if test="param2.offset >= 0 and param2.pageSize > 0">
      limit ${param2.offset}, ${param2.pageSize}
    </if>
  </select>
</mapper>