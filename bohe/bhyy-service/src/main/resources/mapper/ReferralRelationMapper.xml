<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hengsu.bhyy.core.repository.ReferralRelationRepository">
  <resultMap id="BaseResultMap" type="com.hengsu.bhyy.core.entity.ReferralRelation">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="doctor_id" jdbcType="BIGINT" property="doctorId" />
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, doctor_id, customer_id, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from referral_relation
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from referral_relation
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hengsu.bhyy.core.entity.ReferralRelation">
    insert into referral_relation (id, doctor_id, customer_id, 
      status)
    values (#{id,jdbcType=BIGINT}, #{doctorId,jdbcType=BIGINT}, #{customerId,jdbcType=BIGINT}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hengsu.bhyy.core.entity.ReferralRelation">
    insert into referral_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="doctorId != null">
        doctor_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="doctorId != null">
        #{doctorId,jdbcType=BIGINT},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hengsu.bhyy.core.entity.ReferralRelation">
    update referral_relation
    <set>
      <if test="doctorId != null">
        doctor_id = #{doctorId,jdbcType=BIGINT},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hengsu.bhyy.core.entity.ReferralRelation">
    update referral_relation
    set doctor_id = #{doctorId,jdbcType=BIGINT},
      customer_id = #{customerId,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectCount" parameterType="com.hengsu.bhyy.core.entity.ReferralRelation" resultType="java.lang.Integer">
    select count(*) from referral_relation
    <where>
      <if test="id != null">
        and id = #{id,jdbcType=BIGINT}
      </if>
      <if test="doctorId != null">
        and doctor_id = #{doctorId,jdbcType=BIGINT}
      </if>
      <if test="customerId != null">
        and customer_id = #{customerId,jdbcType=BIGINT}
      </if>
      <if test="status != null">
        and status = #{status,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  <select id="selectPage" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from referral_relation where 1 = 1 
    <if test="param1.id != null">
      and id = #{param1.id,jdbcType=BIGINT}
    </if>
    <if test="param1.doctorId != null">
      and doctor_id = #{param1.doctorId,jdbcType=BIGINT}
    </if>
    <if test="param1.customerId != null">
      and customer_id = #{param1.customerId,jdbcType=BIGINT}
    </if>
    <if test="param1.status != null">
      and status = #{param1.status,jdbcType=INTEGER}
    </if>
    <if test="param2.sort != null">
      order by 
      <foreach collection="param2.sort" item="order" separator=",">
        ${order.property} ${order.direction}
      </foreach>
    </if>
    <if test="param2.offset >= 0 and param2.pageSize > 0">
      limit ${param2.offset}, ${param2.pageSize}
    </if>
  </select>
</mapper>