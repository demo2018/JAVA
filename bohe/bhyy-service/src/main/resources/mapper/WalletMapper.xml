<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hengsu.bhyy.core.repository.WalletRepository">
  <resultMap id="BaseResultMap" type="com.hengsu.bhyy.core.entity.Wallet">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="doctor_id" jdbcType="BIGINT" property="doctorId" />
    <result column="bill_id" jdbcType="BIGINT" property="billId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, doctor_id, bill_id, name, money, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wallet
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from wallet
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hengsu.bhyy.core.entity.Wallet">
    insert into wallet (id, doctor_id, bill_id, 
      name, money, create_time
      )
    values (#{id,jdbcType=BIGINT}, #{doctorId,jdbcType=BIGINT}, #{billId,jdbcType=BIGINT}, 
      #{name,jdbcType=VARCHAR}, #{money,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hengsu.bhyy.core.entity.Wallet">
    insert into wallet
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="doctorId != null">
        doctor_id,
      </if>
      <if test="billId != null">
        bill_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="doctorId != null">
        #{doctorId,jdbcType=BIGINT},
      </if>
      <if test="billId != null">
        #{billId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hengsu.bhyy.core.entity.Wallet">
    update wallet
    <set>
      <if test="doctorId != null">
        doctor_id = #{doctorId,jdbcType=BIGINT},
      </if>
      <if test="billId != null">
        bill_id = #{billId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hengsu.bhyy.core.entity.Wallet">
    update wallet
    set doctor_id = #{doctorId,jdbcType=BIGINT},
      bill_id = #{billId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      money = #{money,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectCount" parameterType="com.hengsu.bhyy.core.entity.Wallet" resultType="java.lang.Integer">
    select count(*) from wallet
    <where>
      <if test="id != null">
        and id = #{id,jdbcType=BIGINT}
      </if>
      <if test="doctorId != null">
        and doctor_id = #{doctorId,jdbcType=BIGINT}
      </if>
      <if test="billId != null">
        and bill_id = #{billId,jdbcType=BIGINT}
      </if>
      <if test="name != null">
        and name = #{name,jdbcType=VARCHAR}
      </if>
      <if test="money != null">
        and money = #{money,jdbcType=DECIMAL}
      </if>
      <if test="createTime != null">
        and create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
    </where>
  </select>
  <select id="selectPage" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wallet where 1 = 1 
    <if test="param1.id != null">
      and id = #{param1.id,jdbcType=BIGINT}
    </if>
    <if test="param1.doctorId != null">
      and doctor_id = #{param1.doctorId,jdbcType=BIGINT}
    </if>
    <if test="param1.billId != null">
      and bill_id = #{param1.billId,jdbcType=BIGINT}
    </if>
    <if test="param1.name != null">
      and name = #{param1.name,jdbcType=VARCHAR}
    </if>
    <if test="param1.money != null">
      and money = #{param1.money,jdbcType=DECIMAL}
    </if>
    <if test="param1.createTime != null">
      and create_time = #{param1.createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="param2.sort != null">
      order by 
      <foreach collection="param2.sort" item="order" separator=",">
        ${order.property} ${order.direction}
      </foreach>
    </if>
    <if test="param2.offset >= 0 and param2.pageSize > 0">
      limit ${param2.offset}, ${param2.pageSize}
    </if>
  </select>
</mapper>